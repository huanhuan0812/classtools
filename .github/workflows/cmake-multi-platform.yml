name: Build and Package Qt Application with CMake (Release + Ninja)

on:
  workflow_dispatch

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        floder: [rand-simple, rand, ITClassHelper/full, ITClassHelper/single/hosteditor]
      fail-fast: false
    name: ${{ matrix.floder }} Build on ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: ls and goto floder
      run: |
        ls
        cd ${{ matrix.floder }}
        ls


    # Install Qt for each platform
    - name: Install Qt windows
      if: matrix.os == 'windows-latest'
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2.2'
        arch: 'win64_mingw'

    - name: Install Qt linux 
      if: matrix.os == 'ubuntu-latest'
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2.*'
        target: 'desktop'

    - name: Install Qt mac
      if: matrix.os == 'macOS-latest'
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2.*'
        target: 'desktop'

    # Install build tools (CMake + Ninja)
    - name: Install CMake
      uses: lukka/get-cmake@latest
      with:
        cmake-version: '3.25.0'

    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3

    # Create build directory
    - name: Create build directory
      run: mkdir ${{ matrix.floder }}/build

    # Configure with CMake (Ninja generator + Release mode)
    - name: Configure with CMake
      run: |
        cd ${{ matrix.floder }}  
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -B build

    # Build with Ninja
    - name: Build application
      run: cd ${{ matrix.floder }}/build